syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "Protobuf/reference/acs12.proto";
// The namespace of this class
option csharp_namespace = "AElf.Contracts.POAPContract";

service POAPContract {
  // The name of the state class the smart contract is going to use to access blockchain state
  option (aelf.csharp_state) = "AElf.Contracts.POAPContract.POAPContractState";
  option (aelf.base) = "Protobuf/reference/acs12.proto";
  // This is required to denote this contract follows the default fee mechanism defined by acs12 aelf contract standard
  
  rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
  }
  rpc Mint (google.protobuf.Empty) returns (google.protobuf.Empty) {
  }
}

message Minted {
  option (aelf.is_event) = true;
  string symbol = 1;
  aelf.Address receiver = 2;
}

message InitializeInput {
  string symbol = 1;
  string nft_image_url = 2;
  string event_title = 3;
  string event_date = 4;
  string event_venue = 5;
  string event_description = 6;
  google.protobuf.Timestamp mint_start_time = 7;
  google.protobuf.Timestamp mint_end_time = 8;
}

// this message is used to store the state of the contract
message EventInfo {
  string nft_image_url = 1;
  string title = 2;
  string date = 3;
  string venue = 4;
  string description = 5;
}